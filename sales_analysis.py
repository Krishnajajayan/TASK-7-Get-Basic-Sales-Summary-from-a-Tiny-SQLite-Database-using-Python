# -*- coding: utf-8 -*-
"""sales summary

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gHvd01VGVewxKxVGsvkokHZO4Ub5_15h
"""

import sqlite3
# Connect to (or create) the database
conn = sqlite3.connect("sales_data.db")
cursor = conn.cursor()

#Create the sales Table
cursor.execute("""
CREATE TABLE IF NOT EXISTS sales (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    product TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    price REAL NOT NULL,
    sale_date TEXT NOT NULL
)
""")
conn.commit()

#Insert Sample Data
sample_sales_data = [
    ("Laptop", 5, 800.00, "2025-01-15"),
    ("Smartphone", 10, 500.00, "2025-01-16"),
    ("Tablet", 7, 300.00, "2025-01-17"),
    ("Monitor", 4, 150.00, "2025-01-18"),
    ("Keyboard", 15, 25.00, "2025-01-19"),
    ("Mouse", 20, 18.00, "2025-01-20"),
    ("Headphones", 12, 60.00, "2025-01-21"),
    ("Webcam", 8, 70.00, "2025-01-22"),
    ("Printer", 3, 200.00, "2025-01-23"),
    ("Router", 9, 90.00, "2025-01-24"),
    ("Laptop", 2, 820.00, "2025-02-01"),
    ("Smartphone", 6, 520.00, "2025-02-02"),
    ("Tablet", 4, 310.00, "2025-02-03"),
    ("Monitor", 5, 155.00, "2025-02-04"),
    ("Keyboard", 10, 27.00, "2025-02-05"),
    ("Mouse", 14, 19.00, "2025-02-06"),
    ("Headphones", 6, 65.00, "2025-02-07"),
    ("Webcam", 5, 75.00, "2025-02-08"),
    ("Printer", 2, 210.00, "2025-02-09"),
    ("Router", 7, 95.00, "2025-02-10"),
]

cursor.executemany("""
INSERT INTO sales (product, quantity, price, sale_date)
VALUES (?, ?, ?, ?)
""", sample_sales_data)
conn.commit()

import pandas as pd
#Total Quantity Sold per Product
query1 = """
SELECT
    product,
    SUM(quantity) AS total_quantity_sold
FROM sales
GROUP BY product
ORDER BY total_quantity_sold DESC
"""

df1 = pd.read_sql_query(query1, conn)
print("ðŸ”¹ Total Quantity Sold per Product:")
print(df1)

#Total Revenue per Product
query2 = """
SELECT
    product,
    ROUND(SUM(quantity * price), 2) AS total_revenue
FROM sales
GROUP BY product
ORDER BY total_revenue DESC
"""

df2 = pd.read_sql_query(query2, conn)
print("ðŸ”¹ Total Revenue per Product:")
print(df2)

#Monthly Revenue (Grouped by Month)
query3 = """
SELECT
    SUBSTR(sale_date, 1, 7) AS month,
    ROUND(SUM(quantity * price), 2) AS monthly_revenue
FROM sales
GROUP BY month
ORDER BY month
"""

df3 = pd.read_sql_query(query3, conn)
print("ðŸ”¹ Monthly Revenue:")
print(df3)

#Top 5 Best-Selling Products by Quantity
query4 = """
SELECT
    product,
    SUM(quantity) AS total_quantity_sold
FROM sales
GROUP BY product
ORDER BY total_quantity_sold DESC
LIMIT 5
"""

df4 = pd.read_sql_query(query4, conn)
print("ðŸ”¹ Top 5 Best-Selling Products:")
print(df4)

import matplotlib.pyplot as plt
# Plot
#Total Revenue by Product
plt.figure(figsize=(10, 6))
df2.plot(kind='bar', x='product', y='total_revenue', color='teal', legend=False)
plt.title("Total Revenue by Product", fontsize=14)
plt.xlabel("Product", fontsize=12)
plt.ylabel("Revenue ($)", fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("total_revenue_by_product.png")
plt.show()

# Plot
#Total Quantity Sold by Product
plt.figure(figsize=(10, 6))
df1.plot(kind='bar', x='product', y='total_quantity_sold', color='orange', legend=False)
plt.title("Total Quantity Sold by Product", fontsize=14)
plt.xlabel("Product", fontsize=12)
plt.ylabel("Quantity Sold", fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("quantity_sold_by_product.png")
plt.show()

# Plot
#Monthly Revenue Trend (Line Chart)
plt.figure(figsize=(10, 6))
df3.plot(kind='line', x='month', y='monthly_revenue', marker='o', color='purple', legend=False)
plt.title("Monthly Revenue Trend", fontsize=14)
plt.xlabel("Month", fontsize=12)
plt.ylabel("Revenue ($)", fontsize=12)
plt.xticks(rotation=45)
plt.grid(True)
plt.tight_layout()
plt.savefig("monthly_revenue_trend.png")
plt.show()

#Close the Connection
conn.close()

